version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped
    networks:
      - kafka-network

  broker:
    image: wurstmeister/kafka
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      DOCKER_API_VERSION: 1.24
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "saga-transaction-start:1:1,account-debit-request:1:1,account-debit-response:1:1,account-credit-request:1:1,account-credit-response:1:1,transaction-complete:1:1,transaction-compensate:1:1,notification-events:1:1,testSendingDataFromSaga:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - kafka-network

  saga-orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.SagaOrchestrator
    ports:
      - "6001:5000"
    environment:
      KAFKA_BROKER: broker:9092
    depends_on:
      - broker 

  account:
    build:
      context: ./AccountManager
      dockerfile: Dockerfile
    ports:
      - "6002:5000"
    environment:
      KAFKA_BROKER: broker:9092
    depends_on:
      - broker 

  transaction:
    build:
      context: ./TransactionManager
      dockerfile: Dockerfile
    ports:
      - "6003:5000"
    environment:
      KAFKA_BROKER: broker:9092
    depends_on:
      - broker 

  notification:
    build:
      context: ./NotificationManager
      dockerfile: Dockerfile
    ports:
      - "6004:5000"
    environment:
      KAFKA_BROKER: broker:9092
    depends_on:
      - broker 

  audit:
    build:
      context: ./AuditManager
      dockerfile: Dockerfile
    ports:
      - "6005:5000"
    environment:
      KAFKA_BROKER: broker:9092
    depends_on:
      - broker 

networks:
  kafka-network:
